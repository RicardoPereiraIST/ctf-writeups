
# coding: utf-8

# This code was extracted from the notebook, it will not work well without it!

M = 93556643250795678718734474880013829509320385402690660619699653921022012489089
A = 66001598144012865876674115570268990806314506711104521036747533612798434904785
B = 25255205054024371783896605039267101837972419055969636393425590261926131199030

E = EllipticCurve(GF(M), [A, B])

P = E(56027910981442853390816693056740903416379421186644480759538594137486160388926, 65533262933617146434438829354623658858649726233622196512439589744498050226926)
Q = E(61124499720410964164289905006830679547191538609778446060514645905829507254103, 2595146854028317060979753545310334521407008629091560515441729386088057610440)

print("Order of P:", P.order())

"""
Solutions partial discrete logs:

- 2 -> 2
- 3 -> 1
- 5 -> 4
- 7 -> 1
- 137 -> 129
- 593 -> 224
- 24337 -> 5729
- 25589 -> 13993
- 3637793 -> 1730599
- 5733569 -> 4590572
- 106831998530025000830453 -> ??
- 1975901744727669147699767 -> ??
"""
# From factordb.com
factors = [[2,2], [3,1], [5,1], [7,1], [137,1], [593,1], [24337,1],
           [25589, 1], [3637793,1], [5733569,1], [106831998530025000830453, 1],
           [1975901744727669147699767, 1]]

# Repeat this for all factors, changing the values each time.
# Too lazy to implement, so I did it manually
co_factors = 3 * 5 * 7 * 137 * 593 * 24337 * 25589 * 3637793 * 5733569 * 106831998530025000830453 * 1975901744727669147699767

Q = co_factors*Q
P = co_factors*P

discrete_log_rho(Q,P,ord=2, operation='+')



CRT_list([2,1,4,1,129,224,5729,13993,1730599,4590572], [4,3,5,7,137,593,24337,25589,3637793,5733569])



# Initialize points again beacause of the algorithm above
P = E(56027910981442853390816693056740903416379421186644480759538594137486160388926, 65533262933617146434438829354623658858649726233622196512439589744498050226926)
Q = E(61124499720410964164289905006830679547191538609778446060514645905829507254103, 2595146854028317060979753545310334521407008629091560515441729386088057610440)
n = 152977126447386808276536247114

n*P == Q

